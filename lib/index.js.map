{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM ,{findDOMNode} from \"react-dom\";\nimport PropTypes from \"prop-types\";\n\nclass ReactToPrint extends React.Component {\n\n  static propTypes = {\n    /** Copy styles over into print window. default: true */\n    copyStyles: PropTypes.bool,\n    /** auto open print dialog */\n    showPreview: PropTypes.bool,\n    /** Trigger action used to open browser print */\n    trigger: PropTypes.func.isRequired,\n    /** Content to be printed */\n    content: PropTypes.func.isRequired,\n    /** Callback function to trigger before print */\n    onBeforePrint: PropTypes.func,\n    /** Optional class to pass to the print window body */\n    bodyClass: PropTypes.string,\n    printButton: PropTypes.element,\n    cancelButton: PropTypes.element,\n  };\n\n  static defaultProps = {\n    copyStyles: true,\n    closeAfterPrint: true,\n    bodyClass: '',\n  };\n\n  triggerPrint(target) {\n    if (this.props.onBeforePrint) {\n      this.props.onBeforePrint();\n    }\n    if(!this.props.showPreview){\n      //when print right away add time to load\n      setTimeout(() => {\n        target.contentWindow.focus();\n        target.contentWindow.print();\n        this.removeWindow(target);\n      }, 500);\n    }else {\n      target.contentWindow.focus();\n      target.contentWindow.print();\n      this.removeWindow(target);\n    }\n  }\n\n  manualPrint(target){\n    if (this.linkLoaded === this.linkTotal) {\n      this.triggerPrint(target);\n    }\n    if (this.props.copyStyles === false && this.linkTotal === 0){\n      this.triggerPrint(target);\n    }\n  }\n\n  removeWindow(target) {\n    // setTimeout(() => {\n      target.parentNode.removeChild(target);\n    // }, 100);\n    //why delay\n  }\n\n  handlePrint = () => {\n    console.log('handlePrint')\n    const {\n      content,\n      copyStyles,\n      onAfterPrint,\n      showPreview,\n      printButton,\n      cancelButton\n    } = this.props;\n    this.loadtriggered= false\n\n    let printWindow = document.createElement('iframe');\n    printWindow.style.position = 'absolute';\n    printWindow.className += ' previewFrame'\n    if(showPreview){\n      printWindow.style.top = '0px';\n      printWindow.style.left = '0px';\n      printWindow.style.width = '800px';\n      printWindow.style.height = '100vh';\n      printWindow.style.borderWidth = '0px 2px';\n      printWindow.style.backgroundColor = '#fff';\n    }else {\n      printWindow.style.top = '-1000px';\n      printWindow.style.left = '-1000px';\n\n    }\n\n    const contentEl = content();\n    const contentNodes = findDOMNode(contentEl);\n\n    const linkNodes = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    this.linkTotal = linkNodes.length || 0;\n    this.linkLoaded = 0;\n\n    const markLoaded = (type) => {\n\n      this.linkLoaded++;\n\n      if (this.linkLoaded === this.linkTotal&&!showPreview) {\n        this.triggerPrint(printWindow);\n      }\n\n    };\n\n    printWindow.onload = () => {\n      if(this.loadtriggered){\n        return\n      }\n      this.loadtriggered= true\n\n      let domDoc = printWindow.contentDocument || printWindow.contentWindow.document;\n\n      domDoc.open();\n      domDoc.write(contentNodes.outerHTML);\n      domDoc.close();\n\n      let styleEl = domDoc.createElement('style');\n      styleEl.appendChild(domDoc.createTextNode(\n          \"@page { size: auto;  margin: 0mm; }\" +\n          \" @media print {\" +\n          \" body { -webkit-print-color-adjust: exact; }\" +\n          \" .printButtonInnerClassName{display: none;}\" +\n          \" .cancelButtonInnerClassName{display: none;}\" +\n          \"}\"));\n      domDoc.head.appendChild(styleEl);\n\n      if (printButton) {\n        let printELe = React.cloneElement(printButton, {})\n        let printNode = document.createElement(\"div\");\n        printNode.addEventListener(\"click\", () => {\n          this.manualPrint(printWindow)\n        })\n        ReactDOM.render(printELe, printNode)\n        printNode.className += ' printButtonInnerClassName'\n        domDoc.body.appendChild(printNode);\n      }\n\n      if (cancelButton) {\n        let cancelEle = React.cloneElement(cancelButton, {})\n        let cancelNode = document.createElement(\"div\");\n        cancelNode.addEventListener(\"click\", () => {\n          printWindow.style.display = 'none'\n          this.removeWindow(printWindow);\n        })\n        ReactDOM.render(cancelEle, cancelNode)\n        cancelNode.className += ' cancelButtonInnerClassName'\n        domDoc.body.appendChild(cancelNode);\n      }\n\n      if (copyStyles !== false) {\n\n        const headEls = document.querySelectorAll('style, link[rel=\"stylesheet\"]');\n        let styleCSS = \"\";\n\n        [...headEls].forEach(node => {\n\n          if (node.tagName === 'STYLE') {\n\n            if (node.sheet) {\n              for (let i = 0; i < node.sheet.cssRules.length; i++) {\n                styleCSS += node.sheet.cssRules[i].cssText + \"\\r\\n\";\n              }\n\n            }\n\n          } else {\n\n            let newHeadEl = domDoc.createElement(node.tagName);\n\n            let attributes = [...node.attributes];\n            attributes.forEach(attr => {\n              newHeadEl.setAttribute(attr.nodeName, attr.nodeValue);\n            });\n\n            newHeadEl.onload = markLoaded.bind(null, 'link');\n            newHeadEl.onerror = markLoaded.bind(null, 'link');\n            domDoc.head.appendChild(newHeadEl);\n\n          }\n\n\n        });\n\n        if (styleCSS.length) {\n          let newHeadEl = domDoc.createElement('style');\n          newHeadEl.setAttribute('id', 'react-to-print');\n          newHeadEl.appendChild(domDoc.createTextNode(styleCSS));\n          domDoc.head.appendChild(newHeadEl);\n        }\n\n      }\n\n      if ((this.linkTotal === 0 || copyStyles === false) && !showPreview) {\n        this.triggerPrint(printWindow);\n      }\n    };\n\n    document.body.appendChild(printWindow);\n  }\n\n  render() {\n\n    return React.cloneElement(this.props.trigger(), {\n     ref: (el) => this.triggerRef = el,\n     onClick: this.handlePrint\n    });\n\n  }\n\n}\n\nexport default ReactToPrint;\n"],"names":["ReactToPrint","handlePrint","log","_this","props","content","copyStyles","showPreview","onAfterPrint","printButton","cancelButton","loadtriggered","printWindow","document","createElement","style","position","className","top","left","width","height","borderWidth","backgroundColor","contentEl","contentNodes","findDOMNode","linkNodes","querySelectorAll","linkTotal","length","linkLoaded","markLoaded","type","triggerPrint","onload","domDoc","contentDocument","contentWindow","open","write","outerHTML","close","styleEl","appendChild","createTextNode","head","printELe","React","cloneElement","printNode","addEventListener","manualPrint","render","body","cancelEle","cancelNode","display","removeWindow","headEls","styleCSS","forEach","node","tagName","sheet","i","cssRules","cssText","newHeadEl","attributes","setAttribute","attr","nodeName","nodeValue","bind","onerror","target","this","onBeforePrint","focus","print","parentNode","removeChild","trigger","el","_this3","triggerRef","Component","defaultProps"],"mappings":"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"}